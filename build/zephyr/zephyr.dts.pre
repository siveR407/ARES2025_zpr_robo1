# 0 "/home/sive/my_work/zephyrproject/zephyr/misc/empty_file.c"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "/home/sive/my_work/zephyrproject/zephyr/boards/robomasterc/robomasterc.dts" 1






/dts-v1/;
# 1 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f407Xg.dtsi" 1 3 4






# 1 "/home/sive/my_work/zephyrproject/zephyr/dts/common/mem.h" 1 3 4
# 8 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f407Xg.dtsi" 2 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f407.dtsi" 1 3 4






# 1 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f405.dtsi" 1 3 4







# 1 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f401.dtsi" 1 3 4






# 1 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 1 3 4
# 10 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/armv7-m.dtsi" 1 3 4


# 1 "/home/sive/my_work/zephyrproject/zephyr/dts/common/skeleton.dtsi" 1 3 4
# 9 "/home/sive/my_work/zephyrproject/zephyr/dts/common/skeleton.dtsi" 3 4
/ {
 #address-cells = <1>;
 #size-cells = <1>;
 chosen { };
 aliases { };
};
# 4 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/armv7-m.dtsi" 2 3 4

/ {
 soc {
  #address-cells = <1>;
  #size-cells = <1>;
  compatible = "simple-bus";
  interrupt-parent = <&nvic>;
  ranges;

  nvic: interrupt-controller@e000e100 {
   #address-cells = <1>;
   compatible = "arm,v7m-nvic";
   reg = <0xe000e100 0xc00>;
   interrupt-controller;
   #interrupt-cells = <2>;
  };

  systick: timer@e000e010 {
   compatible = "arm,armv7m-systick";
   reg = <0xe000e010 0x10>;
  };
 };
};
# 11 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/adc.h" 1 3 4
# 9 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/adc.h" 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/dt-util.h" 1 3 4
# 19 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/dt-util.h" 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_macro.h" 1 3 4
# 34 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_macro.h" 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 1 3 4
# 18 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_loops.h" 1 3 4
# 1083 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_loops.h" 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_listify.h" 1 3 4
# 1084 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_loops.h" 2 3 4
# 19 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 162 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_internal_is_eq.h" 1 3 4
# 163 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 193 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_internal_util_inc.h" 1 3 4
# 194 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4


# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_internal_util_dec.h" 1 3 4
# 197 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4


# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_internal_util_x2.h" 1 3 4
# 200 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 35 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/sys/util_macro.h" 2 3 4
# 20 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/dt-util.h" 2 3 4
# 10 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/adc.h" 2 3 4
# 12 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32f4_clock.h" 1 3 4
# 9 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32f4_clock.h" 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32_common_clocks.h" 1 3 4
# 10 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32f4_clock.h" 2 3 4
# 13 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/i2c/i2c.h" 1 3 4
# 14 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/gpio/gpio.h" 1 3 4
# 15 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/pwm/pwm.h" 1 3 4
# 16 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/pwm/stm32_pwm.h" 1 3 4
# 17 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/dma/stm32_dma.h" 1 3 4
# 18 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32f4_adc.h" 1 3 4
# 9 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32f4_adc.h" 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32_adc.h" 1 3 4
# 10 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32f4_adc.h" 2 3 4
# 19 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32f2_4_7_reset.h" 1 3 4
# 10 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32f2_4_7_reset.h" 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32-common.h" 1 3 4
# 11 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32f2_4_7_reset.h" 2 3 4
# 20 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/sensor/qdec_stm32.h" 1 3 4
# 21 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/dts/common/freq.h" 1 3 4
# 22 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f4.dtsi" 2 3 4

/ {
 chosen {
  zephyr,flash-controller = &flash;
  zephyr,cortex-m-idle-timer = &rtc;
 };

 cpus {
  #address-cells = <1>;
  #size-cells = <0>;

  cpu0: cpu@0 {
   device_type = "cpu";
   compatible = "arm,cortex-m4f";
   reg = <0>;
   cpu-power-states = <&stop>;
  };

  power-states {
   stop: stop {
    compatible = "zephyr,power-state";
    power-state-name = "suspend-to-idle";






    min-residency-us = <400>;
    exit-latency-us = <300>;
   };
  };
 };

 sram0: memory@20000000 {
  compatible = "mmio-sram";
 };

 clocks {
  clk_hse: clk-hse {
   #clock-cells = <0>;
   compatible = "st,stm32-hse-clock";
   status = "disabled";
  };

  clk_hsi: clk-hsi {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <((16) * 1000 * 1000)>;
   status = "disabled";
  };

  clk_lse: clk-lse {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <32768>;
   status = "disabled";
  };

  clk_lsi: clk-lsi {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <((32) * 1000)>;
   status = "disabled";
  };

  pll: pll {
   #clock-cells = <0>;
   compatible = "st,stm32f4-pll-clock";
   status = "disabled";
  };
 };

 mcos {
  mco1: mco1 {
   compatible = "st,stm32-clock-mco";
   status = "disabled";
  };

  mco2: mco2 {
   compatible = "st,stm32-clock-mco";
   status = "disabled";
  };
 };

 soc {
  flash: flash-controller@40023c00 {
   compatible = "st,stm32-flash-controller", "st,stm32f4-flash-controller";
   reg = <0x40023c00 0x400>;
   interrupts = <4 0>;

   #address-cells = <1>;
   #size-cells = <1>;

   flash0: flash@8000000 {
    compatible = "st,stm32f4-nv-flash", "st,stm32-nv-flash",
          "soc-nv-flash";

    write-block-size = <1>;

    max-erase-time = <4000>;
   };
  };

  rcc: rcc@40023800 {
   compatible = "st,stm32-rcc";
   #clock-cells = <2>;
   reg = <0x40023800 0x400>;

   rctl: reset-controller {
    compatible = "st,stm32-rcc-rctl";
    #reset-cells = <1>;
   };
  };

  exti: interrupt-controller@40013c00 {
   compatible = "st,stm32-exti";
   interrupt-controller;
   #interrupt-cells = <1>;
   #address-cells = <1>;
   reg = <0x40013c00 0x400>;
   num-lines = <16>;
   interrupts = <6 0>, <7 0>, <8 0>, <9 0>,
         <10 0>, <23 0>, <40 0>;
   interrupt-names = "line0", "line1", "line2", "line3",
       "line4", "line5-9", "line10-15";
   line-ranges = <0 1>, <1 1>, <2 1>, <3 1>,
          <4 1>, <5 5>, <10 6>;
  };

  pinctrl: pin-controller@40020000 {
   compatible = "st,stm32-pinctrl";
   #address-cells = <1>;
   #size-cells = <1>;
   reg = <0x40020000 0x2000>;

   gpioa: gpio@40020000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40020000 0x400>;
    clocks = <&rcc 0x030 0x00000001>;
   };

   gpiob: gpio@40020400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40020400 0x400>;
    clocks = <&rcc 0x030 0x00000002>;
   };

   gpioc: gpio@40020800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40020800 0x400>;
    clocks = <&rcc 0x030 0x00000004>;
   };

   gpiod: gpio@40020c00 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40020c00 0x400>;
    clocks = <&rcc 0x030 0x00000008>;
   };

   gpioe: gpio@40021000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40021000 0x400>;
    clocks = <&rcc 0x030 0x00000010>;
   };

   gpiof: gpio@40021400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40021400 0x400>;
    clocks = <&rcc 0x030 0x00000020>;
   };

   gpiog: gpio@40021800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40021800 0x400>;
    clocks = <&rcc 0x030 0x00000040>;
   };

   gpioh: gpio@40021c00 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40021c00 0x400>;
    clocks = <&rcc 0x030 0x00000080>;
   };
  };

  iwdg: watchdog@40003000 {
   compatible = "st,stm32-watchdog";
   reg = <0x40003000 0x400>;
   status = "disabled";
  };

  wwdg: watchdog@40002c00 {
   compatible = "st,stm32-window-watchdog";
   reg = <0x40002C00 0x400>;
   clocks = <&rcc 0x040 0x00000800>;
   interrupts = <0 7>;
   status = "disabled";
  };

  usart1: serial@40011000 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40011000 0x400>;
   clocks = <&rcc 0x044 0x00000010>;
   resets = <&rctl (((0x24) << 5U) | (4U))>;
   interrupts = <37 0>;
   status = "disabled";
  };

  usart2: serial@40004400 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40004400 0x400>;
   clocks = <&rcc 0x040 0x00020000>;
   resets = <&rctl (((0x20) << 5U) | (17U))>;
   interrupts = <38 0>;
   status = "disabled";
  };

  usart6: serial@40011400 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40011400 0x400>;
   clocks = <&rcc 0x044 0x00000020>;
   resets = <&rctl (((0x24) << 5U) | (5U))>;
   interrupts = <71 0>;
   status = "disabled";
  };

  i2c1: i2c@40005400 {
   compatible = "st,stm32-i2c-v1";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005400 0x400>;
   clocks = <&rcc 0x040 0x00200000>;
   interrupts = <31 0>, <32 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  i2c2: i2c@40005800 {
   compatible = "st,stm32-i2c-v1";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005800 0x400>;
   clocks = <&rcc 0x040 0x00400000>;
   interrupts = <33 0>, <34 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  i2c3: i2c@40005c00 {
   compatible = "st,stm32-i2c-v1";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005c00 0x400>;
   clocks = <&rcc 0x040 0x00800000>;
   interrupts = <72 0>, <73 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  spi1: spi@40013000 {
   compatible = "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40013000 0x400>;
   clocks = <&rcc 0x044 0x00001000>;
   interrupts = <35 5>;
   status = "disabled";
  };

  usbotg_fs: usb@50000000 {
   compatible = "st,stm32-otgfs";
   reg = <0x50000000 0x40000>;
   interrupts = <67 0>;
   interrupt-names = "otgfs";
   num-bidir-endpoints = <4>;
   ram-size = <1280>;
   maximum-speed = "full-speed";
   phys = <&otgfs_phy>;
   clocks = <&rcc 0x034 0x00000080>,
     <&rcc ((0x003 + 1) + 1) 0xFF>;
   status = "disabled";
  };

  timers1: timers@40010000 {
   compatible = "st,stm32-timers";
   reg = <0x40010000 0x400>;
   clocks = <&rcc 0x044 0x00000001>;
   resets = <&rctl (((0x24) << 5U) | (0U))>;
   interrupts = <24 0>, <25 0>, <26 0>, <27 0>;
   interrupt-names = "brk", "up", "trgcom", "cc";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   qdec {
    compatible = "st,stm32-qdec";
    status = "disabled";
    st,input-filter-level = <0>;
   };
  };

  timers2: timers@40000000 {
   compatible = "st,stm32-timers";
   reg = <0x40000000 0x400>;
   clocks = <&rcc 0x040 0x00000001>;
   resets = <&rctl (((0x20) << 5U) | (0U))>;
   interrupts = <28 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };

   qdec {
    compatible = "st,stm32-qdec";
    status = "disabled";
    st,input-filter-level = <0>;
   };
  };

  timers3: timers@40000400 {
   compatible = "st,stm32-timers";
   reg = <0x40000400 0x400>;
   clocks = <&rcc 0x040 0x00000002>;
   resets = <&rctl (((0x20) << 5U) | (1U))>;
   interrupts = <29 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };

   qdec {
    compatible = "st,stm32-qdec";
    status = "disabled";
    st,input-filter-level = <0>;
   };
  };

  timers4: timers@40000800 {
   compatible = "st,stm32-timers";
   reg = <0x40000800 0x400>;
   clocks = <&rcc 0x040 0x00000004>;
   resets = <&rctl (((0x20) << 5U) | (2U))>;
   interrupts = <30 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };

   qdec {
    compatible = "st,stm32-qdec";
    status = "disabled";
    st,input-filter-level = <0>;
   };
  };

  timers5: timers@40000c00 {
   compatible = "st,stm32-timers";
   reg = <0x40000c00 0x400>;
   clocks = <&rcc 0x040 0x00000008>;
   resets = <&rctl (((0x20) << 5U) | (3U))>;
   interrupts = <50 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };

   qdec {
    compatible = "st,stm32-qdec";
    status = "disabled";
    st,input-filter-level = <0>;
   };
  };

  timers9: timers@40014000 {
   compatible = "st,stm32-timers";
   reg = <0x40014000 0x400>;
   clocks = <&rcc 0x044 0x00010000>;
   resets = <&rctl (((0x24) << 5U) | (16U))>;
   interrupts = <24 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers10: timers@40014400 {
   compatible = "st,stm32-timers";
   reg = <0x40014400 0x400>;
   clocks = <&rcc 0x044 0x00020000>;
   resets = <&rctl (((0x24) << 5U) | (17U))>;
   interrupts = <25 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers11: timers@40014800 {
   compatible = "st,stm32-timers";
   reg = <0x40014800 0x400>;
   clocks = <&rcc 0x044 0x00040000>;
   resets = <&rctl (((0x24) << 5U) | (18U))>;
   interrupts = <26 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  rtc: rtc@40002800 {
   compatible = "st,stm32-rtc";
   reg = <0x40002800 0x400>;
   interrupts = <41 0>;
   clocks = <&rcc 0x040 0x10000000>;
   prescaler = <32768>;
   alarms-count = <2>;
   alrm-exti-line = <17>;
   status = "disabled";

   bbram: backup_regs {
    compatible = "st,stm32-bbram";
    st,backup-regs = <20>;
    status = "disabled";
   };
  };

  adc1: adc@40012000 {
   compatible = "st,stm32f4-adc", "st,stm32-adc";
   reg = <0x40012000 0x400>;
   clocks = <&rcc 0x044 0x00000100>;
   interrupts = <18 0>;
   status = "disabled";
   #io-channel-cells = <1>;
   resolutions = <((((0x04) & ((1UL << (8)) - 1UL)) << 0U) | (((24) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x00) & ((1UL << (3)) - 1UL)) << 16U) | (((12) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x04) & ((1UL << (8)) - 1UL)) << 0U) | (((24) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x01) & ((1UL << (3)) - 1UL)) << 16U) | (((10) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x04) & ((1UL << (8)) - 1UL)) << 0U) | (((24) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x02) & ((1UL << (3)) - 1UL)) << 16U) | (((8) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x04) & ((1UL << (8)) - 1UL)) << 0U) | (((24) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x03) & ((1UL << (3)) - 1UL)) << 16U) | (((6) & ((1UL << (13)) - 1UL)) << 19U))>;
   sampling-times = <3 15 28 56 84 112 144 480>;
   st,adc-clock-source = <1>;
   st,adc-sequencer = <1>;
  };

  dma1: dma@40026000 {
   compatible = "st,stm32-dma-v1";
   #dma-cells = <4>;
   reg = <0x40026000 0x400>;
   interrupts = <11 0 12 0 13 0 14 0 15 0 16 0 17 0 47 0>;
   clocks = <&rcc 0x030 0x200000>;
   status = "disabled";
  };

  dma2: dma@40026400 {
   compatible = "st,stm32-dma-v1";
   #dma-cells = <4>;
   reg = <0x40026400 0x400>;
   interrupts = <56 0 57 0 58 0 59 0 60 0 68 0 69 0 70 0>;
   clocks = <&rcc 0x030 0x400000>;
   st,mem2mem;
   status = "disabled";
  };

  sdmmc1: sdmmc@40012c00 {
   compatible = "st,stm32-sdmmc";
   reg = <0x40012c00 0x400>;
   clocks = <&rcc 0x044 0x00000800>,
     <&rcc ((0x003 + 1) + 1) 0xFF>;
   resets = <&rctl (((0x24) << 5U) | (11U))>;
   interrupts = <49 0>;
   status = "disabled";
  };
 };

 die_temp: dietemp {
  compatible = "st,stm32-temp-cal";
  ts-cal1-addr = <0x1FFF7A2C>;
  ts-cal2-addr = <0x1FFF7A2E>;
  ts-cal1-temp = <30>;
  ts-cal2-temp = <110>;
  ts-cal-vrefanalog = <3300>;
  io-channels = <&adc1 18>;
  status = "disabled";
 };

 vref: vref {
  compatible = "st,stm32-vref";
  vrefint-cal-addr = <0x1FFF7A2A>;
  vrefint-cal-mv = <3300>;
  io-channels = <&adc1 17>;
  status = "disabled";
 };

 vbat: vbat {
  compatible = "st,stm32-vbat";
  ratio = <4>;
  io-channels = <&adc1 18>;
  status = "disabled";
 };

 otgfs_phy: otgfs_phy {
  compatible = "usb-nop-xceiv";
  #phy-cells = <0>;
 };

 smbus1: smbus1 {
  compatible = "st,stm32-smbus";
  #address-cells = <1>;
  #size-cells = <0>;
  i2c = <&i2c1>;
  status = "disabled";
 };

 smbus2: smbus2 {
  compatible = "st,stm32-smbus";
  #address-cells = <1>;
  #size-cells = <0>;
  i2c = <&i2c2>;
  status = "disabled";
 };

 smbus3: smbus3 {
  compatible = "st,stm32-smbus";
  #address-cells = <1>;
  #size-cells = <0>;
  i2c = <&i2c3>;
  status = "disabled";
 };
};

&nvic {
 arm,num-irq-priority-bits = <4>;
};
# 8 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f401.dtsi" 2 3 4

/ {
 clocks {
  plli2s: plli2s {
   #clock-cells = <0>;
   compatible = "st,stm32f4-plli2s-clock";
   status = "disabled";
  };
 };

 soc {
  compatible = "st,stm32f401", "st,stm32f4", "simple-bus";

  spi2: spi@40003800 {
   compatible = "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003800 0x400>;
   clocks = <&rcc 0x040 0x00004000>;
   interrupts = <36 5>;
   status = "disabled";
  };

  spi3: spi@40003c00 {
   compatible = "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003c00 0x400>;
   clocks = <&rcc 0x040 0x00008000>;
   interrupts = <51 5>;
   status = "disabled";
  };

  spi4: spi@40013400 {
   compatible = "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40013400 0x400>;
   clocks = <&rcc 0x044 0x00002000>;
   interrupts = <84 5>;
   status = "disabled";
  };

  i2s2: i2s@40003800 {
   compatible = "st,stm32-i2s";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003800 0x400>;
   clocks = <&rcc 0x040 0x00004000>;
   interrupts = <36 5>;
   dmas = <&dma1 4 0 0x400 0x3
    &dma1 3 0 0x400 0x3>;
   dma-names = "tx", "rx";
   status = "disabled";
  };

  i2s3: i2s@40003c00 {
   compatible = "st,stm32-i2s";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003c00 0x400>;
   clocks = <&rcc 0x040 0x00008000>;
   interrupts = <51 5>;
   dmas = <&dma1 5 0 0x400 0x3
    &dma1 0 0 0x400 0x3>;
   dma-names = "tx", "rx";
   status = "disabled";
  };

 };
};
# 9 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f405.dtsi" 2 3 4

/ {
 chosen {
  zephyr,entropy = &rng;
 };

 soc {
  compatible = "st,stm32f405", "st,stm32f4", "simple-bus";

  pinctrl: pin-controller@40020000 {
   reg = <0x40020000 0x2400>;

   gpiof: gpio@40021400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40021400 0x400>;
    clocks = <&rcc 0x030 0x00000020>;
   };

   gpiog: gpio@40021800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40021800 0x400>;
    clocks = <&rcc 0x030 0x00000040>;
   };

   gpioi: gpio@40022000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40022000 0x400>;
    clocks = <&rcc 0x030 0x00000100>;
   };
  };

  usart3: serial@40004800 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40004800 0x400>;
   clocks = <&rcc 0x040 0x00040000>;
   resets = <&rctl (((0x20) << 5U) | (18U))>;
   interrupts = <39 0>;
   status = "disabled";
  };

  uart4: serial@40004c00 {
   compatible ="st,stm32-uart";
   reg = <0x40004c00 0x400>;
   clocks = <&rcc 0x040 0x00080000>;
   resets = <&rctl (((0x20) << 5U) | (19U))>;
   interrupts = <52 0>;
   status = "disabled";
  };

  uart5: serial@40005000 {
   compatible = "st,stm32-uart";
   reg = <0x40005000 0x400>;
   clocks = <&rcc 0x040 0x00100000>;
   resets = <&rctl (((0x20) << 5U) | (20U))>;
   interrupts = <53 0>;
   status = "disabled";
  };

  timers6: timers@40001000 {
   compatible = "st,stm32-timers";
   reg = <0x40001000 0x400>;
   clocks = <&rcc 0x040 0x00000010>;
   resets = <&rctl (((0x20) << 5U) | (4U))>;
   interrupts = <54 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers7: timers@40001400 {
   compatible = "st,stm32-timers";
   reg = <0x40001400 0x400>;
   clocks = <&rcc 0x040 0x00000020>;
   resets = <&rctl (((0x20) << 5U) | (5U))>;
   interrupts = <55 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers8: timers@40010400 {
   compatible = "st,stm32-timers";
   reg = <0x40010400 0x400>;
   clocks = <&rcc 0x044 0x00000002>;
   resets = <&rctl (((0x24) << 5U) | (1U))>;
   interrupts = <43 0>, <44 0>, <45 0>, <46 0>;
   interrupt-names = "brk", "up", "trgcom", "cc";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   qdec {
    compatible = "st,stm32-qdec";
    status = "disabled";
    st,input-filter-level = <0>;
   };
  };

  timers12: timers@40001800 {
   compatible = "st,stm32-timers";
   reg = <0x40001800 0x400>;
   clocks = <&rcc 0x040 0x00000040>;
   resets = <&rctl (((0x20) << 5U) | (6U))>;
   interrupts = <43 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers13: timers@40001c00 {
   compatible = "st,stm32-timers";
   reg = <0x40001c00 0x400>;
   clocks = <&rcc 0x040 0x00000080>;
   resets = <&rctl (((0x20) << 5U) | (7U))>;
   interrupts = <44 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers14: timers@40002000 {
   compatible = "st,stm32-timers";
   reg = <0x40002000 0x400>;
   clocks = <&rcc 0x040 0x00000100>;
   resets = <&rctl (((0x20) << 5U) | (8U))>;
   interrupts = <45 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  usbotg_hs: usb@40040000 {
   compatible = "st,stm32-otghs";
   reg = <0x40040000 0x40000>;
   interrupts = <77 0>, <74 0>, <75 0>;
   interrupt-names = "otghs", "ep1_out", "ep1_in";
   num-bidir-endpoints = <6>;
   ram-size = <4096>;
   maximum-speed = "full-speed";
   phys = <&otghs_fs_phy>;
   clocks = <&rcc 0x030 0x20000000>,
     <&rcc ((0x003 + 1) + 1) 0xFF>;
   status = "disabled";
  };

  can1: can@40006400 {
   compatible = "st,stm32-bxcan";
   reg = <0x40006400 0x400>;
   interrupts = <19 0>, <20 0>, <21 0>, <22 0>;
   interrupt-names = "TX", "RX0", "RX1", "SCE";
   clocks = <&rcc 0x040 0x02000000>;
   status = "disabled";
  };

  can2: can@40006800 {
   compatible = "st,stm32-bxcan";
   reg = <0x40006800 0x400>;
   interrupts = <63 0>, <64 0>, <65 0>, <66 0>;
   interrupt-names = "TX", "RX0", "RX1", "SCE";

   clocks = <&rcc 0x040 0x06000000>;
   master-can-reg = <0x40006400>;
   status = "disabled";
  };

  rng: rng@50060800 {
   compatible = "st,stm32-rng";
   reg = <0x50060800 0x400>;
   interrupts = <80 0>;
   clocks = <&rcc 0x034 0x00000040>;
   status = "disabled";
  };

  backup_sram: memory@40024000 {
   compatible = "zephyr,memory-region", "st,stm32-backup-sram";
   reg = <0x40024000 ((4) * 1024)>;
   clocks = <&rcc 0x030 0x00040000>;
   zephyr,memory-region = "BACKUP_SRAM";
   status = "disabled";
  };

  adc2: adc@40012100 {
   compatible = "st,stm32-adc";
   reg = <0x40012100 0x050>;
   clocks = <&rcc 0x044 0x00000200>;
   interrupts = <18 0>;
   status = "disabled";
   #io-channel-cells = <1>;
   resolutions = <((((0x04) & ((1UL << (8)) - 1UL)) << 0U) | (((24) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x00) & ((1UL << (3)) - 1UL)) << 16U) | (((12) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x04) & ((1UL << (8)) - 1UL)) << 0U) | (((24) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x01) & ((1UL << (3)) - 1UL)) << 16U) | (((10) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x04) & ((1UL << (8)) - 1UL)) << 0U) | (((24) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x02) & ((1UL << (3)) - 1UL)) << 16U) | (((8) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x04) & ((1UL << (8)) - 1UL)) << 0U) | (((24) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x03) & ((1UL << (3)) - 1UL)) << 16U) | (((6) & ((1UL << (13)) - 1UL)) << 19U))>;
   sampling-times = <3 15 28 56 84 112 144 480>;
   st,adc-clock-source = <1>;
   st,adc-sequencer = <1>;
  };

  adc3: adc@40012200 {
   compatible = "st,stm32-adc";
   reg = <0x40012200 0x050>;
   clocks = <&rcc 0x044 0x00000400>;
   interrupts = <18 0>;
   status = "disabled";
   #io-channel-cells = <1>;
   resolutions = <((((0x04) & ((1UL << (8)) - 1UL)) << 0U) | (((24) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x00) & ((1UL << (3)) - 1UL)) << 16U) | (((12) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x04) & ((1UL << (8)) - 1UL)) << 0U) | (((24) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x01) & ((1UL << (3)) - 1UL)) << 16U) | (((10) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x04) & ((1UL << (8)) - 1UL)) << 0U) | (((24) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x02) & ((1UL << (3)) - 1UL)) << 16U) | (((8) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x04) & ((1UL << (8)) - 1UL)) << 0U) | (((24) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (2)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x03) & ((1UL << (3)) - 1UL)) << 16U) | (((6) & ((1UL << (13)) - 1UL)) << 19U))>;
   sampling-times = <3 15 28 56 84 112 144 480>;
   st,adc-clock-source = <1>;
   st,adc-sequencer = <1>;
  };

  dac1: dac@40007400 {
   compatible = "st,stm32-dac";
   reg = <0x40007400 0x400>;
   clocks = <&rcc 0x040 0x20000000>;
   status = "disabled";
   #io-channel-cells = <1>;
  };
 };

 otghs_fs_phy: otghs_fs_phy {
  compatible = "usb-nop-xceiv";
  #phy-cells = <0>;
 };
};
# 8 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f407.dtsi" 2 3 4

/ {
 soc {
  compatible = "st,stm32f407", "st,stm32f4", "simple-bus";

  mac: ethernet@40028000 {
   compatible = "st,stm32-ethernet";
   reg = <0x40028000 0x8000>;
   interrupts = <61 0>;
   clock-names = "stmmaceth", "mac-clk-tx",
          "mac-clk-rx", "mac-clk-ptp";
   clocks = <&rcc 0x030 0x02000000>,
     <&rcc 0x030 0x04000000>,
     <&rcc 0x030 0x08000000>,
     <&rcc 0x030 0x10000000>;
   status = "disabled";
  };
 };
};
# 9 "/home/sive/my_work/zephyrproject/zephyr/dts/arm/st/f4/stm32f407Xg.dtsi" 2 3 4

/ {
 ccm0: memory@10000000 {
  compatible = "zephyr,memory-region", "st,stm32-ccm";
  reg = <0x10000000 ((64) * 1024)>;
  zephyr,memory-region = "CCM";
 };

 sram0: memory@20000000 {
  reg = <0x20000000 ((128) * 1024)>;
 };

 soc {
  flash-controller@40023c00 {
   flash0: flash@8000000 {
    reg = <0x08000000 ((1024) * 1024)>;
   };
  };
 };
};
# 9 "/home/sive/my_work/zephyrproject/zephyr/boards/robomasterc/robomasterc.dts" 2
# 1 "/home/sive/my_work/zephyrproject/modules/hal/stm32/dts/st/f4/stm32f407v(e-g)tx-pinctrl.dtsi" 1 3 4






# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 1 3 4
# 10 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 3 4
# 1 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl-common.h" 1 3 4
# 11 "/home/sive/my_work/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 2 3 4
# 8 "/home/sive/my_work/zephyrproject/modules/hal/stm32/dts/st/f4/stm32f407v(e-g)tx-pinctrl.dtsi" 2 3 4

/ {
 soc {
  pinctrl: pin-controller@40020000 {



   /omit-if-no-ref/ adc1_in0_pa0: adc1_in0_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in1_pa1: adc1_in1_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in2_pa2: adc1_in2_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in3_pa3: adc1_in3_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in4_pa4: adc1_in4_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in5_pa5: adc1_in5_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in6_pa6: adc1_in6_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in7_pa7: adc1_in7_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in8_pb0: adc1_in8_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in9_pb1: adc1_in9_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in10_pc0: adc1_in10_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in11_pc1: adc1_in11_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in12_pc2: adc1_in12_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in13_pc3: adc1_in13_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in14_pc4: adc1_in14_pc4 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_in15_pc5: adc1_in15_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_in0_pa0: adc2_in0_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_in1_pa1: adc2_in1_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_in2_pa2: adc2_in2_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_in3_pa3: adc2_in3_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_in4_pa4: adc2_in4_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_in5_pa5: adc2_in5_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_in6_pa6: adc2_in6_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_in7_pa7: adc2_in7_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_in8_pb0: adc2_in8_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_in9_pb1: adc2_in9_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_in10_pc0: adc2_in10_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_in11_pc1: adc2_in11_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_in12_pc2: adc2_in12_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_in13_pc3: adc2_in13_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_in14_pc4: adc2_in14_pc4 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_in15_pc5: adc2_in15_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_in0_pa0: adc3_in0_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_in1_pa1: adc3_in1_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_in2_pa2: adc3_in2_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_in3_pa3: adc3_in3_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_in10_pc0: adc3_in10_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_in11_pc1: adc3_in11_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_in12_pc2: adc3_in12_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_in13_pc3: adc3_in13_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ analog_pa0: analog_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa1: analog_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa2: analog_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa3: analog_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa4: analog_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa5: analog_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa6: analog_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa7: analog_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa8: analog_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa9: analog_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa10: analog_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa11: analog_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa12: analog_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa13: analog_pa13 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa14: analog_pa14 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa15: analog_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb0: analog_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb1: analog_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb2: analog_pb2 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb3: analog_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb4: analog_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb5: analog_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb6: analog_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb7: analog_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb8: analog_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb9: analog_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb10: analog_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb11: analog_pb11 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb12: analog_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb13: analog_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb14: analog_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb15: analog_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc0: analog_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc1: analog_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc2: analog_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc3: analog_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc4: analog_pc4 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc5: analog_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc6: analog_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc7: analog_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc8: analog_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc9: analog_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc10: analog_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc11: analog_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc12: analog_pc12 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc13: analog_pc13 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc14: analog_pc14 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc15: analog_pc15 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd0: analog_pd0 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd1: analog_pd1 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd2: analog_pd2 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd3: analog_pd3 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd4: analog_pd4 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd5: analog_pd5 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd6: analog_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd7: analog_pd7 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd8: analog_pd8 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd9: analog_pd9 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd10: analog_pd10 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd11: analog_pd11 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd12: analog_pd12 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd13: analog_pd13 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd14: analog_pd14 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd15: analog_pd15 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe0: analog_pe0 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe1: analog_pe1 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe2: analog_pe2 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe3: analog_pe3 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe4: analog_pe4 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe5: analog_pe5 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe6: analog_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe7: analog_pe7 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe8: analog_pe8 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe9: analog_pe9 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe10: analog_pe10 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe11: analog_pe11 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe12: analog_pe12 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe13: analog_pe13 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe14: analog_pe14 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe15: analog_pe15 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph0: analog_ph0 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph1: analog_ph1 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ can1_rx_pa11: can1_rx_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ can1_rx_pb8: can1_rx_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ can1_rx_pd0: can1_rx_pd0 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ can2_rx_pb5: can2_rx_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ can2_rx_pb12: can2_rx_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ can1_tx_pa12: can1_tx_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ can1_tx_pb9: can1_tx_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ can1_tx_pd1: can1_tx_pd1 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ can2_tx_pb6: can2_tx_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ can2_tx_pb13: can2_tx_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ dac_out1_pa4: dac_out1_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ dac_out2_pa5: dac_out2_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ dcmi_hsync_pa4: dcmi_hsync_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_pixclk_pa6: dcmi_pixclk_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d0_pa9: dcmi_d0_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d1_pa10: dcmi_d1_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d5_pb6: dcmi_d5_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_vsync_pb7: dcmi_vsync_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d6_pb8: dcmi_d6_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d7_pb9: dcmi_d7_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d0_pc6: dcmi_d0_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d1_pc7: dcmi_d1_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d2_pc8: dcmi_d2_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d3_pc9: dcmi_d3_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d4_pc11: dcmi_d4_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d2_pe0: dcmi_d2_pe0 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d3_pe1: dcmi_d3_pe1 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d4_pe4: dcmi_d4_pe4 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d6_pe5: dcmi_d6_pe5 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d7_pe6: dcmi_d7_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_col_pa3: eth_col_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_crs_pa0: eth_crs_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_crs_dv_pa7: eth_crs_dv_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_mdc_pc1: eth_mdc_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_mdio_pa2: eth_mdio_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_pps_out_pb5: eth_pps_out_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_ref_clk_pa1: eth_ref_clk_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_rxd0_pc4: eth_rxd0_pc4 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_rxd1_pc5: eth_rxd1_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_rxd2_pb0: eth_rxd2_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_rxd3_pb1: eth_rxd3_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_rx_clk_pa1: eth_rx_clk_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_rx_dv_pa7: eth_rx_dv_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_rx_er_pb10: eth_rx_er_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_txd0_pb12: eth_txd0_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_txd1_pb13: eth_txd1_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_txd2_pc2: eth_txd2_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_txd3_pb8: eth_txd3_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_txd3_pe2: eth_txd3_pe2 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_tx_clk_pc3: eth_tx_clk_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_tx_en_pb11: eth_tx_en_pb11 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ i2c1_scl_pb6: i2c1_scl_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_scl_pb8: i2c1_scl_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_scl_pb10: i2c2_scl_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_scl_pa8: i2c3_scl_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ i2c1_sda_pb7: i2c1_sda_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_sda_pb9: i2c1_sda_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_sda_pb11: i2c2_sda_pb11 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_sda_pc9: i2c3_sda_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ i2c1_smba_pb5: i2c1_smba_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ i2c2_smba_pb12: i2c2_smba_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ i2c3_smba_pa9: i2c3_smba_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ i2s2_ck_pb10: i2s2_ck_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s2_ck_pb13: i2s2_ck_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s3_ck_pb3: i2s3_ck_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s3_ck_pc10: i2s3_ck_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ i2s2_mck_pc6: i2s2_mck_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s3_mck_pc7: i2s3_mck_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ i2s2_sd_pb15: i2s2_sd_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s2_sd_pc3: i2s2_sd_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s3_sd_pb5: i2s3_sd_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s3_sd_pc12: i2s3_sd_pc12 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ i2s2_ws_pb9: i2s2_ws_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s2_ws_pb12: i2s2_ws_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s3_ws_pa4: i2s3_ws_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s3_ws_pa15: i2s3_ws_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ sys_jtms_swdio_pa13: sys_jtms_swdio_pa13 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sys_jtck_swclk_pa14: sys_jtck_swclk_pa14 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sys_jtdi_pa15: sys_jtdi_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sys_jtdo_swo_pb3: sys_jtdo_swo_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sys_jtrst_pb4: sys_jtrst_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ rcc_mco_1_pa8: rcc_mco_1_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ rcc_mco_2_pc9: rcc_mco_2_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ sdio_d4_pb8: sdio_d4_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d5_pb9: sdio_d5_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d6_pc6: sdio_d6_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d7_pc7: sdio_d7_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d0_pc8: sdio_d0_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d1_pc9: sdio_d1_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d2_pc10: sdio_d2_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_d3_pc11: sdio_d3_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_ck_pc12: sdio_ck_pc12 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdio_cmd_pd2: sdio_cmd_pd2 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ spi1_miso_pa6: spi1_miso_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_miso_pb4: spi1_miso_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_miso_pb14: spi2_miso_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_miso_pc2: spi2_miso_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_miso_pb4: spi3_miso_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_miso_pc11: spi3_miso_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };



   /omit-if-no-ref/ spi1_mosi_pa7: spi1_mosi_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_mosi_pb5: spi1_mosi_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_mosi_pb15: spi2_mosi_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_mosi_pc3: spi2_mosi_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_mosi_pb5: spi3_mosi_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_mosi_pc12: spi3_mosi_pc12 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };



   /omit-if-no-ref/ spi1_nss_pa4: spi1_nss_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi1_nss_pa15: spi1_nss_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi2_nss_pb9: spi2_nss_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi2_nss_pb12: spi2_nss_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi3_nss_pa4: spi3_nss_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi3_nss_pa15: spi3_nss_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ spi1_sck_pa5: spi1_sck_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi1_sck_pb3: spi1_sck_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pb10: spi2_sck_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pb13: spi2_sck_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi3_sck_pb3: spi3_sck_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi3_sck_pc10: spi3_sck_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ tim1_bkin_pa6: tim1_bkin_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_bkin_pb12: tim1_bkin_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_bkin_pe15: tim1_bkin_pe15 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_bkin_pa6: tim8_bkin_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ tim10_ch1_pb8: tim10_ch1_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1n_pa7: tim1_ch1n_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1_pa8: tim1_ch1_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2_pa9: tim1_ch2_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3_pa10: tim1_ch3_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch4_pa11: tim1_ch4_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_pb0: tim1_ch2n_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pb1: tim1_ch3n_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim11_ch1_pb9: tim11_ch1_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1n_pb13: tim1_ch1n_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_pb14: tim1_ch2n_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pb15: tim1_ch3n_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1n_pe8: tim1_ch1n_pe8 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1_pe9: tim1_ch1_pe9 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_pe10: tim1_ch2n_pe10 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2_pe11: tim1_ch2_pe11 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pe12: tim1_ch3n_pe12 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3_pe13: tim1_ch3_pe13 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch4_pe14: tim1_ch4_pe14 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pa0: tim2_ch1_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch2_pa1: tim2_ch2_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch3_pa2: tim2_ch3_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch4_pa3: tim2_ch4_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pa5: tim2_ch1_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pa15: tim2_ch1_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch2_pb3: tim2_ch2_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch3_pb10: tim2_ch3_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch4_pb11: tim2_ch4_pb11 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim12_ch1_pb14: tim12_ch1_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim12_ch2_pb15: tim12_ch2_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim13_ch1_pa6: tim13_ch1_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pa6: tim3_ch1_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pa7: tim3_ch2_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch3_pb0: tim3_ch3_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch4_pb1: tim3_ch4_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pb4: tim3_ch1_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pb5: tim3_ch2_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pc6: tim3_ch1_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pc7: tim3_ch2_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch3_pc8: tim3_ch3_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch4_pc9: tim3_ch4_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim14_ch1_pa7: tim14_ch1_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch1_pb6: tim4_ch1_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch2_pb7: tim4_ch2_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch3_pb8: tim4_ch3_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch4_pb9: tim4_ch4_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch1_pd12: tim4_ch1_pd12 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch2_pd13: tim4_ch2_pd13 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch3_pd14: tim4_ch3_pd14 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch4_pd15: tim4_ch4_pd15 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch1_pa0: tim5_ch1_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch2_pa1: tim5_ch2_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch3_pa2: tim5_ch3_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch4_pa3: tim5_ch4_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch1n_pa5: tim8_ch1n_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch1n_pa7: tim8_ch1n_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2n_pb0: tim8_ch2n_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch3n_pb1: tim8_ch3n_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2n_pb14: tim8_ch2n_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch3n_pb15: tim8_ch3n_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch1_pc6: tim8_ch1_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2_pc7: tim8_ch2_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch3_pc8: tim8_ch3_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch4_pc9: tim8_ch4_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim9_ch1_pa2: tim9_ch1_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim9_ch2_pa3: tim9_ch2_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim9_ch1_pe5: tim9_ch1_pe5 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim9_ch2_pe6: tim9_ch2_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ usart1_cts_pa11: usart1_cts_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart2_cts_pa0: usart2_cts_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart2_cts_pd3: usart2_cts_pd3 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart3_cts_pb13: usart3_cts_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart3_cts_pd11: usart3_cts_pd11 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ usart1_rts_pa12: usart1_rts_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart2_rts_pa1: usart2_rts_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart2_rts_pd4: usart2_rts_pd4 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart3_rts_pb14: usart3_rts_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart3_rts_pd12: usart3_rts_pd12 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ usart1_rx_pa10: usart1_rx_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart1_rx_pb7: usart1_rx_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart2_rx_pa3: usart2_rx_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart2_rx_pd6: usart2_rx_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart3_rx_pb11: usart3_rx_pb11 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart3_rx_pc11: usart3_rx_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart3_rx_pd9: usart3_rx_pd9 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart4_rx_pa1: uart4_rx_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart4_rx_pc11: uart4_rx_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart5_rx_pd2: uart5_rx_pd2 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart6_rx_pc7: usart6_rx_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ usart1_tx_pa9: usart1_tx_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart1_tx_pb6: usart1_tx_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart2_tx_pa2: usart2_tx_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart2_tx_pd5: usart2_tx_pd5 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart3_tx_pb10: usart3_tx_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart3_tx_pc10: usart3_tx_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart3_tx_pd8: usart3_tx_pd8 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart4_tx_pa0: uart4_tx_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart4_tx_pc10: uart4_tx_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart5_tx_pc12: uart5_tx_pc12 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart6_tx_pc6: usart6_tx_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ usb_otg_fs_sof_pa8: usb_otg_fs_sof_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_fs_vbus_pa9: usb_otg_fs_vbus_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_fs_id_pa10: usb_otg_fs_id_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_fs_dm_pa11: usb_otg_fs_dm_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_fs_dp_pa12: usb_otg_fs_dp_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ usb_otg_hs_sof_pa4: usb_otg_hs_sof_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_hs_id_pb12: usb_otg_hs_id_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_hs_vbus_pb13: usb_otg_hs_vbus_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_hs_dm_pb14: usb_otg_hs_dm_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_hs_dp_pb15: usb_otg_hs_dp_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ usb_otg_hs_ulpi_d0_pa3: usb_otg_hs_ulpi_d0_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_ck_pa5: usb_otg_hs_ulpi_ck_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_d1_pb0: usb_otg_hs_ulpi_d1_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_d2_pb1: usb_otg_hs_ulpi_d2_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_d7_pb5: usb_otg_hs_ulpi_d7_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_d3_pb10: usb_otg_hs_ulpi_d3_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_d4_pb11: usb_otg_hs_ulpi_d4_pb11 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_d5_pb12: usb_otg_hs_ulpi_d5_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_d6_pb13: usb_otg_hs_ulpi_d6_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_stp_pc0: usb_otg_hs_ulpi_stp_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_dir_pc2: usb_otg_hs_ulpi_dir_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_nxt_pc3: usb_otg_hs_ulpi_nxt_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

  };
 };
};
# 10 "/home/sive/my_work/zephyrproject/zephyr/boards/robomasterc/robomasterc.dts" 2
/ {
 model = "SEGGER STM32F407 Trace Reference Board";
 compatible = "robomasterc";

 chosen {
  zephyr,sram = &sram0;
  zephyr,flash = &flash0;
  zephyr,ccm = &ccm0;
  zephyr,canbus=&can1;
 };

 aliases {
  led0 = &led_0_green;
  led1 = &led_1_green;
  led2 = &led_2_green;
  watchdog0 = &iwdg;
 };

 leds {
  compatible = "gpio-leds";
  led_0_green: led_0_green {
   gpios = <&gpioa 10 (0 << 0)>;
   label = "LED0";
  };
  led_1_green: led_1_green {
   gpios = <&gpioa 11 (0 << 0)>;
   label = "LED1";
  };
  led_2_green: led_2_green {
   gpios = <&gpioa 12 (0 << 0)>;
   label = "LED2";
  };
 };
};

&clk_lsi {
 status = "okay";
};

&clk_hse {
 clock-frequency = <((12) * 1000 * 1000)>;
 status = "okay";
};

&pll {
 div-m = <6>;
 mul-n = <168>;
 div-p = <2>;
 div-q = <4>;
 clocks = <&clk_hse>;
 status = "okay";
};

&rcc {
 clocks = <&pll>;
 clock-frequency = <((168) * 1000 * 1000)>;
 ahb-prescaler = <1>;
 apb1-prescaler = <4>;
 apb2-prescaler = <2>;
};

&rtc {
 clocks = <&rcc 0x040 0x10000000>,
   <&rcc 0x003 ((((0x70) & 0xFFU) << 0U) | (((8) & 0x1FU) << 8U) | (((3) & 0x7U) << 13U) | (((2) & 0x7U) << 16U))>;
 status = "okay";
};

&rng {
 status = "okay";
};

&iwdg {
 status = "okay";
};

&can1{
 status = "okay";
 pinctrl-0 = <&can1_rx_pd0 &can1_tx_pd1>;
 pinctrl-names = "default";
 bitrate=<1000000>;





};
# 0 "<command-line>" 2
# 1 "/home/sive/my_work/zephyrproject/robot1/samples/babbling/robomasterc.overlay" 1
# 0 "<command-line>" 2
# 1 "/home/sive/my_work/zephyrproject/zephyr/misc/empty_file.c"
